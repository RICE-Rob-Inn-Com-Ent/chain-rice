version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/chainrice
      - REDIS_URL=redis://redis:6379
      - BLOCKCHAIN_RPC_URL=http://blockchain:26657
      - JWT_SECRET=your-super-secret-jwt-key
      - NODE_ENV=development
    depends_on:
      - postgres
      - redis
      - blockchain
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - chainrice-network

  # Web Frontend (Cafe Interface)
  web-frontend:
    build:
      context: ./web-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8080
      - VITE_BLOCKCHAIN_RPC_URL=http://localhost:26657
      - VITE_CHAIN_ID=chainrice-local
    depends_on:
      - backend
    volumes:
      - ./web-frontend:/app
      - /app/node_modules
    networks:
      - chainrice-network

  # Mobile Backend (Games API)
  mobile-backend:
    build:
      context: ./mobile-backend
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/chainrice_mobile
      - REDIS_URL=redis://redis:6379
      - BLOCKCHAIN_RPC_URL=http://blockchain:26657
      - JWT_SECRET=your-super-secret-jwt-key-mobile
      - NODE_ENV=development
    depends_on:
      - postgres
      - redis
      - blockchain
    volumes:
      - ./mobile-backend:/app
      - /app/node_modules
    networks:
      - chainrice-network

  # Blockchain Node
  blockchain:
    build:
      context: .
      dockerfile: Dockerfile.blockchain
    ports:
      - "26657:26657"
      - "26656:26656"
      - "1317:1317"
    environment:
      - CHAIN_ID=chainrice-local
      - MONIKER=chainrice-node
    volumes:
      - blockchain-data:/root/.chainrice
      - ./config:/root/.chainrice/config
    networks:
      - chainrice-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=chainrice
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - chainrice-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - chainrice-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - web-frontend
      - backend
      - mobile-backend
    networks:
      - chainrice-network

  # Test Runner
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/chainrice_test
      - REDIS_URL=redis://redis:6379
      - BLOCKCHAIN_RPC_URL=http://blockchain:26657
    depends_on:
      - postgres
      - redis
      - blockchain
    volumes:
      - ./tests:/app/tests
      - ./backend:/app/backend
      - ./mobile-backend:/app/mobile-backend
    networks:
      - chainrice-network

volumes:
  postgres-data:
  redis-data:
  blockchain-data:

networks:
  chainrice-network:
    driver: bridge 